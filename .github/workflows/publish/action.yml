name: Publish
description: Builds and pushes the Docker image to the public ECR and GitHub registry

inputs:
  bake_target:
    description: The target of the bake action
    required: true
  aws_role_to_assume:
    description: The AWS role to assume. Used to authenticate with ECR.
    required: true
  github_token:
    description: The GitHub token. Used to authenticate with GitHub registry.
    required: true
  git_tag:
    description: Git tag to use for the GitHub Release
    required: false
  bake_set:
    description: The `set` argument of the bake action
    required: true
  publish_release:
    description: Whether to publish a GitHub Release
    required: true
    default: false
  release_title:
    description: The title of the GitHub Release.
    required: false
  release_body:
    description: The body of the GitHub Release. If not provided, the body will be auto-generated.
    required: false

runs:
  using: composite
  steps:
      - name: Configure AWS credentials for public ECR
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-region: us-east-1
          role-to-assume: ${{ inputs.aws_role_to_assume }}
          role-duration-seconds: 900

      - name: Login to Amazon ECR Public
        uses: aws-actions/amazon-ecr-login@v1
        with:
          registry-type: public

      - name: Log in to GitHub registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ inputs.github_token }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
        with:
          platforms: linux/arm64

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build and push the image
        uses: docker/bake-action@v2
        with:
          push: true
          targets: ${{ inputs.bake_target }}
          set: ${{ inputs.bake_set }}

      - name: Create release
        uses: ncipollo/release-action@v1
        if: inputs.publish_release == 'true'
        with:
          name: ${{ inputs.release_title }}
          tag: ${{ inputs.git_tag }}
          body: ${{ inputs.release_body }}
          generateReleaseNotes: true
          allowUpdates: true
