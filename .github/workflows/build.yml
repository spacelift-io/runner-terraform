name: Build

on:
  push:
    ignore-branches:
      - main

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  deployment:
    strategy:
      matrix:
        base_image: ["alpine:3.17", "gcr.io/google.com/cloudsdktool/google-cloud-cli:alpine"]
    name: Build the image
    runs-on: ubuntu-latest
    container: docker
    steps:
      - name: Check out repository code
        uses: actions/checkout@main

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
        with:
          platforms: linux/arm64

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Test if image can be built with buildx
        uses: docker/build-push-action@v3
        with:
          push: false
          args: |
            BASE_IMAGE=${{ matrix.base_image }}
          platforms: linux/amd64,linux/arm64
          tags: runner-terraform:latest

      # Can't use the output of the previous step because it's
      # a multiplatform build, so we need to build it again.
      - name: Test if terragrunt & infracost & gcloud are executable (AMD64)
        run: |
          docker build --build-arg TARGETARCH=amd64 --build-arg BASE_IMAGE=${{ matrix.base_image }} -t runner-terraform-test .
          docker run --rm runner-terraform-test sh -c "terragrunt --version && infracost --version"
          if [ ${{ matrix.base_image }} = "gcr.io/google.com/cloudsdktool/google-cloud-cli:alpine" ]; then
            docker run --rm runner-terraform-test sh -c "gcloud --version"
          fi

      - name: Test if terragrunt & infracost & gcloud are executable (ARM64)
        run: |
          docker build --build-arg TARGETARCH=arm64 --build-arg BASE_IMAGE=${{ matrix.base_image }} -t runner-terraform-test .
          docker run --rm runner-terraform-test sh -c "terragrunt --version && infracost --version"
          if [ ${{ matrix.base_image }} = "gcr.io/google.com/cloudsdktool/google-cloud-cli:alpine" ]; then
            docker run --rm runner-terraform-test sh -c "gcloud --version"
          fi
